/* 
 * File:   Key.h
 * Author: Grinev
 *
 * Created on 22 Октябрь 2015 г., 16:39
 */

#ifndef KEY_H
#define	KEY_H

#include <GenericTypeDefs.h>

/* Specify an extension for GCC based compilers */
#if defined(__GNUC__)
#define __EXTENSION __extension__
#else
#define __EXTENSION
#endif

#if !defined(__PACKED)
    #define __PACKED
#endif

typedef unsigned short int  MAP16;

typedef union
{
    UINT16  val;
    UINT8   v2[2] __PACKED;
    struct __PACKED
    {
        UINT8 LB;
        UINT8 HB;
    } byte;
    struct __PACKED
    {
        __EXTENSION UINT8 L0:4;
        __EXTENSION UINT8 L1:4;
        __EXTENSION UINT8 L2:4;
        __EXTENSION UINT8 L3:4;
    }tetr;
}MAP16_VAL, MAP16_TETR;


/************************************************************
 * Scan_Key(void)
 * Сканирование клавиатуры
 ************************************************************/
void Scan_Key(void);
/************************************************************
 * Инициализация
 * 
 ************************************************************/
void Init_Key(void);
/************************************************************
 * Проверка готовности клавиатуры
 * 
 ************************************************************/
unsigned int kbhit(void);

/************************************************************
 * Возвращает код нажатой кнопки
 * 
 ************************************************************/
unsigned char getch(void);
/************************************************************
 * Ждёт нажатие и возвращает код
 * 
 ************************************************************/
unsigned char GetKey(void);
/************************************************************
 * Очистка клавиатурного ввода
 ************************************************************/
void KeyClear(void);
/************************************************************
 * Обнулить Key
 ************************************************************/
void KeyNul(void);
/************************************************************
 * Ожидает отпускание клавиши
 ************************************************************/
void UnpressedKey(void);
#endif	/* KEY_H */

